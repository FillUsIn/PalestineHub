import { type } from 'os';
import { Post } from './entities';

type PostSummaryDTO = {
  id: string;
  body?: string;
  categoryName: string;
  commentCount: number;
  subcategoryName: string;
  title: string;
  username: string;
  createdDate: string;
  voteCount: number;
  thumbnailUrl?: string;
};

type CreatePostDTO = {
  title: string;
  body?: string;
  url?: string;
};

type CreateCommentDTO = {
  parentPostId: string;
  parentCommentId: string;
  body: string;
};

type CreateUserDTO = {
  email: string;
  username: string;
  password: string;
};

type CreateUserResponseDTO = {
  email: string;
  username: string;
  password: string;
  accessToken: string;
  createdAt: string;
};

type LoginDTO = {
  email: string;
  password: string;
};

type LoginResponseDTO = {
  accessToken: string;
};

type Topic = {
  title: string;
  topPosts: TopPost[];
};

// Generated by https://quicktype.io

export interface TopicSummaryDTO {
  title: string;
  topPosts: TopPost[];
}

type TopPost = {
  categoryName: string;
  subcategoryName: string;
  post: Post;
};

type Category = {
  name: string;
  subcategories: Subcategory[];
};

type Subcategory = {
  name: string;
  posts: PostSummaryDTO[];
};

// type PagedResponse<T> = {
//   content: T[];
// };

type PagedResponse<T> = {
  content: T[];
  pageable: {
    sort: {
      sorted: boolean;
      empty: boolean;
      unsorted: boolean;
    };
    pageNumber: number;
    pageSize: number;
    offset: number;
    paged: boolean;
    unpaged: boolean;
  };
  totalPages: number;
  totalElements: number;
  last: boolean;
  size: number;
  number: number;
  sort: {
    sorted: boolean;
    empty: boolean;
    unsorted: boolean;
  };
  numberOfElements: number;
  first: boolean;
  empty: boolean;
};

export type {
  CreatePostDTO,
  CreateCommentDTO,
  PostSummaryDTO,
  Topic,
  TopPost,
  LoginDTO,
  LoginResponseDTO,
  CreateUserDTO,
  CreateUserResponseDTO,
  Category,
  Subcategory,
  PagedResponse,
};
